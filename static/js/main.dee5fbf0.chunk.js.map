{"version":3,"sources":["redux/actions/actionsTypes.ts","redux/actions/actions.ts","components/filter/FilterItem.tsx","components/filter/Filter.tsx","components/pagination/PaginationItem.tsx","components/pagination/Pagination.tsx","utils/createPages.ts","components/images/ImagesItem.tsx","components/images/Images.tsx","App.tsx","redux/reducers/imagesReducer.ts","api/api.ts","redux/sagas/imagesSaga.ts","redux/sagas/index.ts","redux/store.ts","index.tsx"],"names":["TYPES","getImages","type","setImagesData","images","payload","FilterItem","item","currentFilter","dispatch","useDispatch","onClick","className","Filter","useSelector","state","map","disabled","PaginationItem","number","currentPage","handleSelectPage","Pagination","totalNumberPages","pages","numberPage","setCurrentPage","pagesCount","i","push","createPages","ImagesItem","src","title","alt","Images","displayImages","useEffect","image","thumbnailUrl","id","App","initialState","imagesReducer","action","Math","ceil","length","slice","indexTo","indexFrom","getImagesApi","fetch","then","response","json","result","catch","error","getImagesFilterApi","idAlbum","getImagesSaga","getImagesFilterSaga","call","Error","put","console","log","projectSaga","takeEvery","sagaMiddleware","createSagaMiddleware","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dee5fbf0.chunk.js","sourcesContent":["export const TYPES = {\n  GET_IMAGES: \"GET_IMAGES\",\n  GET_IMAGES_FILTER: \"GET_IMAGES_FILTER\",\n  SET_CURRENT_FILTER: \"SET_CURRENT_FILTER\",\n  SET_IMAGES_DATA: \"SET_IMAGES_DATA\",\n  SET_CURRENT_PAGE: \"SET_CURRENT_PAGE\",\n} as const;\n","import { ImagesState } from \"./../types\";\nimport { TYPES } from \"./actionsTypes\";\n\nexport const getImages = () => ({\n  type: TYPES.GET_IMAGES,\n});\n\nexport const getImagesFilter = (idAlbum: number) => ({\n  type: TYPES.GET_IMAGES_FILTER,\n  payload: idAlbum,\n});\n\nexport const setImagesData = (images: Array<ImagesState>) => ({\n  type: TYPES.SET_IMAGES_DATA,\n  payload: images,\n});\n\nexport const setCurrentPage = (numberPage: number) => ({\n  type: TYPES.SET_CURRENT_PAGE,\n  payload: numberPage,\n});\n\nexport const setCurrentFilter = (numberFilter: number) => ({\n  type: TYPES.SET_CURRENT_FILTER,\n  payload: numberFilter,\n});\n","import { useDispatch } from \"react-redux\";\nimport { getImagesFilter } from \"../../redux/actions/actions\";\ntype Props = {\n  item: number;\n  currentFilter: number | null;\n};\n\nconst FilterItem: React.FC<Props> = ({ item, currentFilter }) => {\n  const dispatch = useDispatch();\n  const handleSelectFilter = () => {\n    dispatch(getImagesFilter(item));\n  };\n  return (\n    <button\n      onClick={handleSelectFilter}\n      className={\n        item === currentFilter ? \"filter__item filter__active\" : \"filter__item\"\n      }\n    >\n    Album {item}\n    </button>\n  );\n};\n\nexport default FilterItem;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { getImages } from \"../../redux/actions/actions\";\nimport { stateType } from \"../../redux/store\";\nimport FilterItem from \"./FilterItem\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter: Array<number> = [1, 2, 3, 4, 5];\n  const currentFilter = useSelector(\n    (state: stateType) => state.images.currentFilter\n  );\n  const handleClearFilter = () => {\n    dispatch(getImages());\n  };\n  return (\n    <div className=\"filter\">\n      {filter.map((item: number) => {\n        return (\n          <FilterItem key={item} item={item} currentFilter={currentFilter} />\n        );\n      })}\n      <button\n        className=\"filter__item\"\n        disabled={!currentFilter}\n        onClick={handleClearFilter}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n\nexport default Filter;\n","type Props = {\n  number: number;\n  currentPage: number;\n  handleSelectPage: (numberPage: number) => void;\n};\nconst PaginationItem: React.FC<Props> = ({\n  number,\n  currentPage,\n  handleSelectPage,\n}) => {\n  return (\n    <button\n      className={\n        number === currentPage\n          ? \"pagination__item pagination__active\"\n          : \"pagination__item\"\n      }\n      onClick={() => handleSelectPage(number)}\n    >\n      {number}\n    </button>\n  );\n};\n\nexport default PaginationItem;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { setCurrentPage } from \"../../redux/actions/actions\";\nimport { stateType } from \"../../redux/store\";\nimport { createPages } from \"../../utils/createPages\";\nimport PaginationItem from \"./PaginationItem\";\n\nconst Pagination = () => {\n  const { totalNumberPages, currentPage } = useSelector((state: stateType) => ({\n    totalNumberPages: state.images.totalNumberPages,\n    currentPage: state.images.currentPage,\n  }));\n\n  const dispatch = useDispatch();\n  const pages: Array<number> = [];\n\n  const handleSelectPage = (numberPage: number) => {\n    dispatch(setCurrentPage(numberPage));\n  };\n\n  createPages(pages, totalNumberPages, currentPage);\n\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"pagination__item-text\"\n        onClick={() => handleSelectPage(1)}\n      >\n        start\n      </button>\n      {pages.map((numberPage: number) => {\n        return (\n          <PaginationItem\n            key={numberPage}\n            number={numberPage}\n            currentPage={currentPage}\n            handleSelectPage={handleSelectPage}\n          />\n        );\n      })}\n      <button\n        className=\"pagination__item-text\"\n        onClick={() => handleSelectPage(totalNumberPages)}\n      >\n        finish test\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","export function createPages(\n  pages: Array<number>,\n  pagesCount: number,\n  currentPage: number\n) {\n  if (pagesCount > 10) {\n    if (currentPage > 5) {\n      for (let i = currentPage - 4; i <= currentPage + 5; i++) {\n        pages.push(i);\n        if (i === pagesCount) break;\n      }\n    } else {\n      for (let i = 1; i <= 10; i++) {\n        pages.push(i);\n        if (i === pagesCount) break;\n      }\n    }\n  } else {\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n  }\n}\n","type Props = {\n  src: string;\n  title: string;\n};\n\nconst ImagesItem: React.FC<Props> = ({ src, title }) => {\n  return (\n    <div className=\"photo__item\">\n      <div className=\"photo__item__img\">\n        <img src={src} alt={title}></img>\n      </div>\n      <div className=\"photo__item__desc\">\n        <h4 className=\"photo__item__desc-title\">{title}</h4>\n        <h5 className=\"photo__item__desc-link\">{src}</h5>\n      </div>\n    </div>\n  );\n};\n\nexport default ImagesItem;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getImages } from \"../../redux/actions/actions\";\nimport { stateType } from \"../../redux/store\";\nimport ImagesItem from \"./ImagesItem\";\n\nconst Images = () => {\n  const dispatch = useDispatch();\n  const displayImages = useSelector(\n    (state: stateType) => state.images.displayImages\n  );\n\n  useEffect(() => {\n    dispatch(getImages());\n  }, [dispatch]);\n\n  return (\n    <div className=\"photo\">\n      {displayImages.map((image) => {\n        return (\n          <ImagesItem\n            key={image.id}\n            src={image.thumbnailUrl}\n            title={image.title}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Images;\n","import { useSelector } from \"react-redux\";\nimport Filter from \"./components/filter/Filter\";\nimport Pagination from \"./components/pagination/Pagination\";\nimport Images from \"./components/images/Images\";\nimport { stateType } from \"./redux/store\";\n\nfunction App() {\n  const currentFilter = useSelector(\n    (state: stateType) => state.images.currentFilter\n  );\n  return (\n    <div className=\"wrapper\">\n      <Filter />\n      <h1 className='title'> {currentFilter ? `Images album ${currentFilter}` : \"All images\"}</h1>\n      <Images />\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","import { TYPES } from \"../actions/actionsTypes\";\nimport { ActionImagesReducerType, InitialState } from \"../types\";\n\nconst initialState: InitialState = {\n  images: [],\n  displayImages: [],\n  totalNumberPages: 10,\n  currentPage: 1,\n  currentFilter: null,\n};\nconst imagesReducer = (\n  state: InitialState = initialState,\n  action: ActionImagesReducerType\n): InitialState => {\n  switch (action.type) {\n    case TYPES.SET_IMAGES_DATA: {\n      const totalNumberPages = Math.ceil(action.payload.length / 10);\n      return {\n        ...state,\n        images: action.payload,\n        displayImages: action.payload.slice(0, 10),\n        totalNumberPages,\n        currentPage: 1,\n        currentFilter: null,\n      };\n    }\n    case TYPES.SET_CURRENT_PAGE: {\n      const indexTo = action.payload * 10;\n      const indexFrom = indexTo - 10;\n      return {\n        ...state,\n        currentPage: action.payload,\n        displayImages: state.images.slice(indexFrom, indexTo),\n      };\n    }\n    case TYPES.SET_CURRENT_FILTER: {\n      return {\n        ...state,\n        currentFilter: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\nexport default imagesReducer;\n","export const getImagesApi = () => {\n  return fetch(\"https://jsonplaceholder.typicode.com/photos\")\n    .then((response) => response.json())\n    .then((result) => ({\n      result,\n    }))\n    .catch((error) => ({ error }));\n};\n\nexport const getImagesFilterApi = (idAlbum: number) => {\n  return fetch(`https://jsonplaceholder.typicode.com/albums/${idAlbum}/photos`)\n    .then((response) => response.json())\n    .then((result) => ({\n      result,\n    }))\n    .catch((error) => ({ error }));\n};\n","import {\n  getImagesFilter,\n  setCurrentFilter,\n  setImagesData,\n} from \"../actions/actions\";\nimport { getImagesApi, getImagesFilterApi } from \"../../api/api\";\nimport { call, put } from \"redux-saga/effects\";\nimport { ImagesState, Result } from \"./../types\";\n\nexport function* getImagesSaga() {\n  try {\n    const { result, error }: Result<Array<ImagesState>> = yield call(\n      getImagesApi\n    );\n    if (error) {\n      throw new Error(error);\n    }\n    if (result) {\n      yield put(setImagesData(result));\n    }\n  } catch (e) {\n    console.log(e, \"error in saga 'getImagesSaga\");\n  }\n}\n\nexport function* getImagesFilterSaga({\n  payload: idAlbum,\n}: ReturnType<typeof getImagesFilter>) {\n  try {\n    const { result, error }: Result<Array<ImagesState>> = yield call(\n      getImagesFilterApi,\n      idAlbum\n    );\n    if (error) {\n      throw new Error(error);\n    }\n    if (result) {\n      yield put(setImagesData(result));\n      yield put(setCurrentFilter(idAlbum));\n    }\n  } catch (e) {\n    console.log(e, \"error in saga 'getImagesFilterSaga\");\n  }\n}\n","import { takeEvery } from \"redux-saga/effects\";\nimport { TYPES } from \"../actions/actionsTypes\";\nimport { getImagesFilterSaga, getImagesSaga } from \"./imagesSaga\";\n\nexport default function* projectSaga() {\n  yield takeEvery(TYPES.GET_IMAGES_FILTER, getImagesFilterSaga);\n  yield takeEvery(TYPES.GET_IMAGES, getImagesSaga);\n}\n","import { combineReducers, createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport imagesReducer from \"./reducers/imagesReducer\";\nimport projectSaga from \"./sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst reducers = combineReducers({\n  images: imagesReducer,\n});\n\nexport type stateType = ReturnType<typeof reducers>;\n//@ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(projectSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}